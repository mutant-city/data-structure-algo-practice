general info 
----
access-searching via key
search-searching via value
insert-add a new node(note:add a valueless node, may require restructuring of other nodes)
delete-delete a node(remove a node, note may require restructuring of nodes)
node- a location to store data, may be either indexed or referenced


array
-----
access-1 (numeric index only)
search-n ()
insert-N/A
delete-N/A

pros- fast access
cons- fixed size(no insert or delete of new nodes, can only change data in existing nodes), 
	- numeric index only



linked list
------
access-n
search-n
insert-1
delete-1

pros- dynamic number of nodes, no restructuring of nodes to add a new node
cons- slower access than array, because there is no direct access index
other - can have key/value or just a value, the key is arbitrary because it's just another data entry on a node



doubly linked list
------
everything same as linked list except can go in reverse



circularly linked list
-----
everything same as linked list except last node references the start node












